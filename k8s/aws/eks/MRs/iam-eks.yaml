apiVersion: iam.aws.upbound.io/v1beta1
kind: Role
metadata:
  name: crossplane-eks-role
spec:
  forProvider:
    assumeRolePolicy: |
      {
        "Version": "2012-10-17",
        "Statement": [
            {
                "Effect": "Allow",
                "Principal": {
                    "Service": [
                        "ec2.amazonaws.com",
                        "eks.amazonaws.com",
                        "eks-fargate-pods.amazonaws.com",
                        "lambda.amazonaws.com",
                        "s3.amazonaws.com",
                        "rds.amazonaws.com",
                        "dax.amazonaws.com"
                    ]
                },
                "Action": [
                    "sts:AssumeRole"
                ]
            }
        ]
      }
    tags:
      Name: crossplane-eks-role
      app: crossplane
  providerConfigRef:
    name: default
---
apiVersion: iam.aws.upbound.io/v1beta1
kind: RolePolicyAttachment
metadata:
  name: crossplane-eks-cluster-policy-cluster-policy
spec:
  forProvider:
    policyArn: arn:aws:iam::aws:policy/AmazonEKSClusterPolicy
    roleRef:
      name: crossplane-eks-role
  providerConfigRef:
    name: default
  writeConnectionSecretToRef:
    name: crossplane-eks-cluster-policy-cluster-policy
    namespace: crossplane-system
---
apiVersion: iam.aws.upbound.io/v1beta1
kind: RolePolicyAttachment
metadata:
  name: crossplane-eks-cluster-policy-vpc-controller
spec:
  forProvider:
    policyArn: arn:aws:iam::aws:policy/AmazonEKSVPCResourceController
    roleRef:
      name: crossplane-eks-role
  providerConfigRef:
    name: default
  writeConnectionSecretToRef:
    name: crossplane-eks-cluster-policy-vpc-controller
    namespace: crossplane-system